<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAASFrD/Bwm2/wAAvv8GCcf/Bw3O/wQF0/8DANX/AAfZ/5oUl//tGXX/zJK//8mCpf+VDUn/cQw//2EJ
        Nv9IBy7/GQQo/xACK/8fBSz/IAYl/xgEPP81BnT/h4Ha/5tT6v+fBbz/qw25/60Mt/+kC7b/kgq1/3wU
        t/9pG7r/ZCjA/6Sz9/+QnvT/SFHw/ztT7v9MbO7/Pl3u/2GD8P9wr/3/qVyx/+QGbv/Iibn/xoyu/5QN
        SP90DT//Zws4/1QIMP8tBSb/GAIl/x8GKf8fBib/FQM//z8Nf/+KuOj/nKv//5cj0f+SBrn/gQq3/2gK
        t/9NALT/WzzG/3R93v9set3/tcL+/8DB//+grP//dJX9/1h5+v9Ic/z/Ua/9/4z7//+pkcX/5wNw/9Nt
        qf/JjbH/khJJ/2cKN/9VCTD/Swgr/zAFJP8dAyP/IAYn/xwHJv8XAUb/TCCL/4ff8/9s4f//Xm3w/29T
        2v9mWNT/Jw26/xYAtf9Ycdn/SWfR/zRJyP+0uv7/t7f9/7q7/v+ctfv/YZH5/xkl+P8NWPn/XfH//56w
        0v+6Cl7/jx1W/3YdR/9lCTf/Vwgw/0gIKP8zBSH/HAIf/xkDJf8iBij/Ggcl/x4CSf9TLZ3/Sqj5/xd1
        +/88bvv/U3Hl/1p/5P8gLsb/AAO1/zROzv9agN7/XoTh/7m6/v+4uP//trn+/7TC/f94uf3/EVP4/yZE
        8v9Pxf//h9Lh/2IJNv9YAyz/XQQv/18IMv9cCDH/TAgp/zcHH/8bAx7/GQYp/yQHLf8dBiz/LAdL/1Q1
        pP9TePj/KjXs/zRH7f9Zgez/WHjn/y4xy/8TALb/GACy/zspwP9DNsb/trz//7y7/v+3uf7/rsL+/53Z
        /v9s6///WbX+/0uB/v9jyPj/ZyRU/18CNf9dDDr/VgY1/08DMf9JBTH/OAQp/xUBHP8MARz/GwYq/x8J
        Of81Bkr/TUCp/1KG//9Cevz/CCPw/zhK7v88Mt3/Pg7G/04Huf9YB7b/VgO0/1UCtP9wgPv/oKz+/7fD
        /v+uyv7/l9f8/5212P9/iq//YV+i/1ArbP9oEUj/Yw1C/1wLPf9tHED/bSdH/1AWNf9PFTP/RR4z/zQe
        Nf8dBB//JQYj/0EiS/8+Nmv/RleH/zVfoP9BcOH/PSnf/1IO3v9zEc7/iwy+/5cLuP+bC7f/mgu3/0xm
        +/9Vbfz/a4n8/37Q//+lnMT/20J7/6l4pP/Hu9P/mYOk/4EoXP9SB1z/IQlh/1cbVf+JSWT/j1Fk/20i
        Q//LpL3/6OHy/0Qxav9CGUv/zL/Z/76z0f+nl7j/YhVH/4MCSv9yFl3/cBbY/4MR2v+ZDcP/pQy6/6sL
        uP+tCrb/TW74/0Vl+v8QHPr/Kmb9/22x7f+xsdL/v93v/+Hr8v/o4u7/qTt3/8WUv/+NlLn/CQVg/xIO
        bP8rKFb/KB5S/76y0f//////iIOr/yoJO/+OdZX/wrrQ/56Qs/9qPWj/iUh7/3Mlpf9hEOL/dBXf/44P
        zf+jCrv/qwu3/6sLtv9vkfr/VHT7/wwd+v8zUfj/THv6/zh3+/8STfn/NnL6/3Npwf+lUpv/4sri/9vd
        7P9HOnP/GA55/xIInP8PAYz/npe8//////+qpMf/Iwk9/1EhWP9Wasf/RH7g/xls8P8qgv//Nk74/y4k
        6f8pDOH/Sg7U/3QWzP+NEL//mAy4/6m5/f+Jnf3/apL9/2e4/P9mvPr/Uq75/xdm+f8MSPr/SJL//2qa
        6P/ZyN//w8Ha/6WSmP+Cdn//PCyP/zwnqf+ck67/+/v//7u00v8iB0H/MHPJ/z2f//8iX/z/AAr6/z1W
        9P9SdO7/RmXw/w4T5P8MA9r/Jhnk/zoJyf9JA7j/vbn//7u//f+zyP7/mtj//5Tw/v+C8f7/efP+/4Xt
        /v+l9P//j83h/6mtyv/YzeL/dWFx/5F+dP+wpa3/o42w/7usvv/t7Pv/uKzM/zpOef941uP/de7//1jY
        /f80jf7/Olfx/0xq7v9chfP/IzXq/wAA3P8EBdP/KS3L/y8pw/+6uP//trj+/63A/v+d0/7/jeH+/4vn
        /v+O6P3/kOb9/5Dt//+J6/f/jbrr/+Db6v/CxM7/dWhx/31siv+Uf67/dF90/9LM4/+pnMT/NHfb/2rn
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>